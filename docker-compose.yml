
version: '3.1'

services:

  nginx:
    build: ./nginx
    volumes:
     - asset-volume1:/usr/share/nginx/html
     - ./nginx/config:/usr/local/nginx/conf
#     - ./nginx/logs:/var/log/nginx/
    ports:
     - "${WEB_PORT1}:80"
     - "443:443"
    links:
     - backend
    depends_on:
      - backend
      - npm-repo

  backend:
    build: 
      context: ./
      dockerfile: ./backend/Dockerfile
    volumes:
#      - ./backend/www:/var/www/html/web
      - asset-volume2:/var/www/html/web
      - ./backend/conf/default.conf:/etc/apache2/sites-available/000-default.conf
      - ./backend/conf/apache.conf:/etc/apache2/apache2.conf
    ports:
      - "${BACK_PORT}:80"
    links:
      - db
    depends_on:
      - npm-repo
      - db

  db:
    build: ./db
    restart: always
    command: --innodb_use_native_aio=0
    volumes: 
     - ./www/db/db.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
        MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
        MYSQL_DATABASE: ${MYSQL_DBNAME}
    ports: 
      - "${DB_BASE_PORT}:3306"
    depends_on:
      - npm-repo

  db-editor:
    build: ./db-editor
    restart: always
    ports: 
      - "${DB_EDITOR_PORT}:8080"
    depends_on:
      - db
      - npm-repo
    links:
      - db

  npm-repo:
    build: 
      context: ./
      dockerfile: ./npm-repo/Dockerfile
    ports:
     - "8200:80"
#     - "80:80"
#     - "443:443"
    volumes:
#     - ./npm-repo/www:/usr/share/nginx/html
      - asset-volume1:/repo/front/code/dist/
      - asset-volume2:/repo/back
volumes:
  asset-volume1:
  asset-volume2: